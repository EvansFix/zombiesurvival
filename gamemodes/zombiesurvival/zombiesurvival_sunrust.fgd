//////////////////////////////////////////////////////////////////////////////////
// Sunrust Zombie Survival FGD                                                  //
// Updated 7/18/2018                                                            //
//////////////////////////////////////////////////////////////////////////////////

@include "base.fgd"
@include "halflife2.fgd"
@include "hl2mp.fgd"

//////////////////////////////////////////////////////////////////////////////////
// Gamemode - Brush Entities /////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////
@SolidClass base(Targetname) = func_noair : "ZS: Anyone inside this brush requires air"
[
	// Keys
	enabled(choices) : "Enabled" : 0 : "Enable the brush entity." =
	[
		1 : "Yes"
		0 : "No"
	]

	// Inputs
	input enable(void)   : "Enable the entity."
	input disable(void)  : "Disable the entity."
	input seton(integer) : "Enable or Disable the entity."
]

@SolidClass base(Targetname) = func_nocade : "ZS: Prevents props from being nailed down" []

@SolidClass base(Targetname) = func_status : "ZS: Humans inside this brush will be afflicted with statuses"
[
	// Keys
	enabled(choices) : "Enabled" : 0 : "Enable the brush entity." =
	[
		1 : "Yes"
		0 : "No"
	]
	status(choices) : "Status Type" : "slow" : "The status to give humans inside the brush." =
	[
		"debuff_slow" 			: "Slow"
		"debuff_dimvision"      : "Dim Vision"
		"debuff_enfeeble"   	: "Enfeeble"
		"debuff_frost"			: "Frost"
	]
	linger(choices) : "Status Linger" : 0 : "Should the status linger after leaving the brush." =
	[
		1 : "Yes"
		0 : "No"
	]
	duration(integer) : "Duration" : 5 : "How long the status lasts for."

	// Inputs
	input enable(void)   : "Enable the entity."
	input disable(void)  : "Disable the entity."
	input seton(integer) : "Enable or Disable the entity."
]

@SolidClass base(Targetname) = trigger_zombieclass : "ZS: You can directly control the changing of classes with this."
[
	// Keys
	enabled(choices)         : "Enabled" : 0 : "Enable the brush entity." =
	[
		1 : "Yes"
		0 : "No"
	]
	touchclass(choices)      : "On Touch Class" : "zombie" : "Any living zombie touching the brush will be set to this class name." =
	[
		"zombie"             : "Zombie"
		"classic zombie"     : "Classic Zombie"
		"fast zombie legs"   : "Fast Zombie Legs"
		"fast zombie torso"  : "Fast Zombie Torso"
		"flesh creeper"      : "Flesh Creeper"
		"fresh dead"         : "Fresh Dead"
		"ghoul"              : "Ghoul"
		"gore child"         : "Gore Child"
		"headcrab"           : "Headcrab"
		"initial dead"       : "Initial Dead"
		"recent dead"        : "Recent Dead"
		"super zombie"       : "Super Zombie"
		"zombie legs"        : "Zombie Legs"
		"zombie torso"       : "Zombie Torso"
		"fast headcrab"      : "Fast Headcrab"
		"shadow lurker"      : "Shadow Lurker"
		"shadow walker"      : "Shadow Walker"
		"skeletal crawler"   : "Skeletal Crawler"
		"skeletal walker"    : "Skeletal Walker"
		"wraith"             : "Wraith"
		"petrified wraith"   : "Petrified Wraith"
		"bloated zombie"     : "Bloated Zombie"
		"vile bloated zombie": "Vile Bloated Zombie"
		"fast zombie"        : "Fast Zombie"
		"poison headcrab"    : "Poison Headcrab"
		"barbed headcrab"    : "Barbed Headcrab"
		"poison zombie"      : "Poison Zombie"
		"lacerator"          : "Lacerator"
		"charger"            : "Charger"
		"chem burster"       : "Chem Burster"
		"chem zombie"        : "Chem Zombie"
		"shadow corruptor"   : "Shadow Corruptor"
		"ass kicker"         : "Ass Kicker"
		"shit slapper"       : "Shit Slapper"
		"ancient nightmare"  : "Ancient Nightmare"
		"bonemesh"           : "Bonemesh"
		"doom crab"          : "Doom Crab"
		"extinction crab"    : "Extinction Crab"
		"devourer"           : "Devourer"
		"frost shade"        : "Frost Shade"
		"giga gore child"    : "Giga Gore Child"
		"giga shadow child"  : "Giga Shadow Child"
		"nightmare"          : "Nightmare"
		"puke pus"           : "Puke Pus"
		"red marrow"         : "Red Marrow"
		"shade"              : "Shade"
		"the butcher"        : "The Butcher"
		"the grave digger"   : "The Grave Digger"
		"the tickle monster" : "The Tickle Monster"
		"howler"             : "Howler"
		"wil o' wisp"        : "Wil O' Wisp"
		"cool wisp"          : "Cool Wisp"
	]
	endtouchclass(choices)   : "On Leaving Class" : "zombie" : "Same as Touching Class but for when leaving the brush." =
	[
		"zombie"             : "Zombie"
		"classic zombie"     : "Classic Zombie"
		"fast zombie legs"   : "Fast Zombie Legs"
		"fast zombie torso"  : "Fast Zombie Torso"
		"flesh creeper"      : "Flesh Creeper"
		"fresh dead"         : "Fresh Dead"
		"ghoul"              : "Ghoul"
		"gore child"         : "Gore Child"
		"headcrab"           : "Headcrab"
		"initial dead"       : "Initial Dead"
		"recent dead"        : "Recent Dead"
		"super zombie"       : "Super Zombie"
		"zombie legs"        : "Zombie Legs"
		"zombie torso"       : "Zombie Torso"
		"fast headcrab"      : "Fast Headcrab"
		"shadow lurker"      : "Shadow Lurker"
		"shadow walker"      : "Shadow Walker"
		"skeletal crawler"   : "Skeletal Crawler"
		"skeletal walker"    : "Skeletal Walker"
		"wraith"             : "Wraith"
		"petrified wraith"   : "Petrified Wraith"
		"bloated zombie"     : "Bloated Zombie"
		"vile bloated zombie" : "Vile Bloated Zombie"
		"fast zombie"        : "Fast Zombie"
		"poison headcrab"    : "Poison Headcrab"
		"barbed headcrab"    : "Barbed Headcrab"
		"poison zombie"      : "Poison Zombie"
		"lacerator"          : "Lacerator"
		"charger"            : "Charger"
		"chem burster"       : "Chem Burster"
		"chem zombie"        : "Chem Zombie"
		"shadow corruptor"   : "Shadow Corruptor"
		"ass kicker"         : "Ass Kicker"
		"shit slapper"       : "Shit Slapper"
		"ancient nightmare"  : "Ancient Nightmare"
		"bonemesh"           : "Bonemesh"
		"doom crab"          : "Doom Crab"
		"extinction crab"    : "Extinction Crab"
		"devourer"           : "Devourer"
		"frost shade"        : "Frost Shade"
		"giga gore child"    : "Giga Gore Child"
		"giga shadow child"  : "Giga Shadow Child"
		"nightmare"          : "Nightmare"
		"puke pus"           : "Puke Pus"
		"red marrow"         : "Red Marrow"
		"shade"              : "Shade"
		"the butcher"        : "The Butcher"
		"the grave digger"   : "The Grave Digger"
		"the tickle monster" : "The Tickle Monster"
		"howler"             : "Howler"
		"wil o' wisp"        : "Wil O' Wisp"
		"cool wisp"          : "Cool Wisp"
	]
	touchdeathclass(choices) : "On Touch Respawn Class" : "zombie" : "Any living zombie touching the brush will be set to this class name on death." =
	[
		"zombie"             : "Zombie"
		"classic zombie"     : "Classic Zombie"
		"fast zombie legs"   : "Fast Zombie Legs"
		"fast zombie torso"  : "Fast Zombie Torso"
		"flesh creeper"      : "Flesh Creeper"
		"fresh dead"         : "Fresh Dead"
		"ghoul"              : "Ghoul"
		"shadow child"       : "Shadow Child"
		"gore child"         : "Gore Child"
		"headcrab"           : "Headcrab"
		"initial dead"       : "Initial Dead"
		"recent dead"        : "Recent Dead"
		"super zombie"       : "Super Zombie"
		"zombie legs"        : "Zombie Legs"
		"zombie torso"       : "Zombie Torso"
		"fast headcrab"      : "Fast Headcrab"
		"shadow lurker"      : "Shadow Lurker"
		"shadow walker"      : "Shadow Walker"
		"skeletal crawler"   : "Skeletal Crawler"
		"skeletal walker"    : "Skeletal Walker"
		"wraith"             : "Wraith"
		"petrified wraith"   : "Petrified Wraith"
		"bloated zombie"     : "Bloated Zombie"
		"vile bloated zombie": "Vile Bloated Zombie"
		"fast zombie"        : "Fast Zombie"
		"poison headcrab"    : "Poison Headcrab"
		"barbed headcrab"    : "Barbed Headcrab"
		"poison zombie"      : "Poison Zombie"
		"lacerator"          : "Lacerator"
		"charger"            : "Charger"
		"chem burster"       : "Chem Burster"
		"chem zombie"        : "Chem Zombie"
		"shadow corruptor"   : "Shadow Corruptor"
		"ass kicker"         : "Ass Kicker"
		"shit slapper"       : "Shit Slapper"
		"ancient nightmare"  : "Ancient Nightmare"
		"bonemesh"           : "Bonemesh"
		"doom crab"          : "Doom Crab"
		"extinction crab"    : "Extinction Crab"
		"devourer"           : "Devourer"
		"frost shade"        : "Frost Shade"
		"giga gore child"    : "Giga Gore Child"
		"giga shadow child"  : "Giga Shadow Child"
		"nightmare"          : "Nightmare"
		"puke pus"           : "Puke Pus"
		"red marrow"         : "Red Marrow"
		"shade"              : "Shade"
		"the butcher"        : "The Butcher"
		"the grave digger"   : "The Grave Digger"
		"the tickle monster" : "The Tickle Monster"
		"howler"             : "Howler"
		"wil o' wisp"        : "Wil O' Wisp"
		"cool wisp"          : "Cool Wisp"
	]
	endtouchdeathclass(choices) : "On Leaving Respawn Class" : "zombie" : "Same as Touching Respawn Class but for when leaving the brush." =
	[
		"zombie"             : "Zombie"
		"classic zombie"     : "Classic Zombie"
		"fast zombie legs"   : "Fast Zombie Legs"
		"fast zombie torso"  : "Fast Zombie Torso"
		"flesh creeper"      : "Flesh Creeper"
		"fresh dead"         : "Fresh Dead"
		"ghoul"              : "Ghoul"
		"gore child"         : "Gore Child"
		"headcrab"           : "Headcrab"
		"initial dead"       : "Initial Dead"
		"recent dead"        : "Recent Dead"
		"super zombie"       : "Super Zombie"
		"zombie legs"        : "Zombie Legs"
		"zombie torso"       : "Zombie Torso"
		"fast headcrab"      : "Fast Headcrab"
		"shadow lurker"      : "Shadow Lurker"
		"shadow walker"      : "Shadow Walker"
		"skeletal crawler"   : "Skeletal Crawler"
		"skeletal walker"    : "Skeletal Walker"
		"wraith"             : "Wraith"
		"petrified wraith"   : "Petrified Wraith"
		"bloated zombie"     : "Bloated Zombie"
		"vile bloated zombie" : "Vile Bloated Zombie"
		"fast zombie"        : "Fast Zombie"
		"poison headcrab"    : "Poison Headcrab"
		"barbed headcrab"    : "Barbed Headcrab"
		"poison zombie"      : "Poison Zombie"
		"lacerator"          : "Lacerator"
		"charger"            : "Charger"
		"chem burster"       : "Chem Burster"
		"chem zombie"        : "Chem Zombie"
		"shadow corruptor"   : "Shadow Corruptor"
		"ass kicker"         : "Ass Kicker"
		"shit slapper"       : "Shit Slapper"
		"ancient nightmare"  : "Ancient Nightmare"
		"bonemesh"           : "Bonemesh"
		"doom crab"          : "Doom Crab"
		"extinction crab"    : "Extinction Crab"
		"devourer"           : "Devourer"
		"frost shade"        : "Frost Shade"
		"giga gore child"    : "Giga Gore Child"
		"giga shadow child"  : "Giga Shadow Child"
		"nightmare"          : "Nightmare"
		"puke pus"           : "Puke Pus"
		"red marrow"         : "Red Marrow"
		"shade"              : "Shade"
		"the butcher"        : "The Butcher"
		"the grave digger"   : "The Grave Digger"
		"the tickle monster" : "The Tickle Monster"
		"howler"             : "Howler"
		"wil o' wisp"        : "Wil O' Wisp"
		"cool wisp"          : "Cool Wisp"
	]
	onlywhenclass(choices)   : "Player Must Be This Class" : "disabled" : "Set this to a specific class to change only these zombie types, separate multiple classes with commas." =
	[
		"disabled"           : "Disabled"
		"zombie"             : "Zombie"
		"classic zombie"     : "Classic Zombie"
		"fast zombie legs"   : "Fast Zombie Legs"
		"fast zombie torso"  : "Fast Zombie Torso"
		"flesh creeper"      : "Flesh Creeper"
		"fresh dead"         : "Fresh Dead"
		"ghoul"              : "Ghoul"
		"gore child"         : "Gore Child"
		"headcrab"           : "Headcrab"
		"initial dead"       : "Initial Dead"
		"recent dead"        : "Recent Dead"
		"super zombie"       : "Super Zombie"
		"zombie legs"        : "Zombie Legs"
		"zombie torso"       : "Zombie Torso"
		"fast headcrab"      : "Fast Headcrab"
		"shadow lurker"      : "Shadow Lurker"
		"shadow walker"      : "Shadow Walker"
		"skeletal crawler"   : "Skeletal Crawler"
		"skeletal walker"    : "Skeletal Walker"
		"wraith"             : "Wraith"
		"petrified wraith"   : "Petrified Wraith"
		"bloated zombie"     : "Bloated Zombie"
		"vile bloated zombie" : "Vile Bloated Zombie"
		"fast zombie"        : "Fast Zombie"
		"poison headcrab"    : "Poison Headcrab"
		"barbed headcrab"    : "Barbed Headcrab"
		"poison zombie"      : "Poison Zombie"
		"lacerator"          : "Lacerator"
		"charger"            : "Charger"
		"chem burster"       : "Chem Burster"
		"chem zombie"        : "Chem Zombie"
		"shadow corruptor"   : "Shadow Corruptor"
		"ass kicker"         : "Ass Kicker"
		"shit slapper"       : "Shit Slapper"
		"ancient nightmare"  : "Ancient Nightmare"
		"bonemesh"           : "Bonemesh"
		"doom crab"          : "Doom Crab"
		"extinction crab"    : "Extinction Crab"
		"devourer"           : "Devourer"
		"frost shade"        : "Frost Shade"
		"giga gore child"    : "Giga Gore Child"
		"giga shadow child"  : "Giga Shadow Child"
		"nightmare"          : "Nightmare"
		"puke pus"           : "Puke Pus"
		"red marrow"         : "Red Marrow"
		"shade"              : "Shade"
		"the butcher"        : "The Butcher"
		"the grave digger"   : "The Grave Digger"
		"the tickle monster" : "The Tickle Monster"
		"howler"             : "Howler"
		"wil o' wisp"        : "Wil O' Wisp"
		"cool wisp"          : "Cool Wisp"
	]
	onetime(choices)         : "One Time?" : 0 : "If yes then anyone who gets swapped will be respawned as the last class they were before the change." =
	[
		1 : "Yes"
		0 : "No"
	]
	instantchange(choices)   : "Change Instantly?" : 1 : "If yes then anyone who gets swapped will instantly be changed right on the spot." =
	[
		1 : "Yes"
		0 : "No"
	]

	// Inputs
	input enable(void)                  : "Enable the entity."
	input disable(void)                 : "Disable the entity."
	input seton(integer)                : "Set Enabled keyvalue."
	input settouchclass(string)         : "Set On Touch Class keyvalue."
	input setendtouchclass(string)      : "Set On Leaving Class keyvalue."
	input settouchdeathclass(string)    : "Set On Touch Respawn Class keyvalue."
	input setendtouchdeathclass(string) : "Set On Leaving Respawn Class keyvalue."
	input setonetime(integer)           : "Set One Time keyvalue. <boolean>"
	input setinstantchange(integer)     : "Set Change Instantly keyvalue. <boolean>"
	input setonlywhenclass(string)      : "Set Only When Class keyvalue."
]

@SolidClass base(Targetname) = trigger_bossclass : "ZS: A zombie that touches this brush"
[
	// Keys
	enabled(choices)       : "Enabled" : 0 : "Enable the brush entity." =
	[
		1 : "Yes"
		0 : "No"
	]
	silent(choices)        : "Silent" : 0 : "If yes then then the server does not announce that a player has become the new boss." =
	[
		1 : "Yes"
		0 : "No"
	]
	instantchange(choices) : "Change Instantly?" : 1 : "If yes then anyone who gets swapped will instantly be changed right on the spot." =
	[
		1 : "Yes"
		0 : "No"
	]
	class(choices)         : "Force to Specific Class?" : "" : "If set then the new boss will be this class" =
	[
		""                   : "Disabled"
		"ass kicker"         : "Ass Kicker"
		"shit slapper"       : "Shit Slapper"
		"ancient nightmare"  : "Ancient Nightmare"
		"bonemesh"           : "Bonemesh"
		"doom crab"          : "Doom Crab"
		"extinction crab"    : "Extinction Crab"
		"devourer"           : "Devourer"
		"frost shade"        : "Frost Shade"
		"giga gore child"    : "Giga Gore Child"
		"giga shadow child"  : "Giga Shadow Child"
		"nightmare"          : "Nightmare"
		"puke pus"           : "Puke Pus"
		"red marrow"         : "Red Marrow"
		"shade"              : "Shade"
		"the butcher"        : "The Butcher"
		"the grave digger"   : "The Grave Digger"
		"the tickle monster" : "The Tickle Monster"
		"howler"             : "Howler"
		"wil o' wisp"        : "Wil O' Wisp"
		"cool wisp"          : "Cool Wisp"
	]

	// Inputs
	input enable(void)               : "Enable the entity."
	input disable(void)              : "Disable the entity."
	input seton(integer)             : "Set Enabled keyvalue. <boolean>"
	input setsilent(integer)         : "Set Silent keyvalue. <boolean>"
	input setinstantchange(integer)  : "Set Change Instantly keyvalue. <boolean>"
	input setclass(string)           : "Set specific class to spawn, must be a boss class e.g 'Giga Gore Child'"
	input spawnboss(void)            : "Spawns the boss using the zombie with the highest damage"
	input spawndemiboss(void)        : "Spawns a demiboss based on the highest damage"
	input setdemiclass(void)         : "Selects the demiboss class for players to spawn as"

	// Outputs
	output OnBossTouched(void)       : "Set when a boss starts touching the brush. Is not fired when a zombie becomes a boss in this volume."
]

@SolidClass base(Targetname) = trigger_escape : "ZS: Escape area for humans. Any humans passing through this brush will become spectators and win when all humans have either escaped or died."
[
	// Keys
	enabled(choices) : "Enabled" : 1 : "Enable the brush entity." =
	[
		1 : "Yes"
		0 : "No"
	]

	// Inputs
	input enable(void)   : "Enable the entity."
	input disable(void)  : "Disable the entity."
	input seton(integer) : "Set Enabled keyvalue."
]

@SolidClass base(Targetname) = func_arsenalzone : "ZS: Anyone within this brush is able to purchase items."
[
	// Keys
	enabled(choices) : "Enabled" : 0 : "Enable the brush entity." =
	[
		1 : "Yes"
		0 : "No"
	]

	// Inputs
	input enable(void)   : "Enable the entity."
	input disable(void)  : "Disable the entity."
	input seton(integer) : "Set Enabled keyvalue."
]

///////////////////////////////////////////////////////////////////////////////////
// Gamemode - Point Entities //////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////

@BaseClass base(Targetname) = ZSSpawn
[
	// Keys
	disabled(choices)   : "Disabled" : 0 : "If disabled, players cannot spawn here." =
	[
		1 : "Yes"
		0 : "No"
	]

	// Inputs
	input enable(void)  : "Enable the spawn point."
	input disable(void) : "Disable the spawn point."
	input toggle(void)  : "Toggle the spawn point."
]

@PointClass base(PlayerClass, Angles, ZSSpawn) studio("models/editor/playerstart.mdl") = info_player_human       : "ZS: Humans can spawn here." []
@PointClass base(PlayerClass, Angles, ZSSpawn) studio("models/zombie/classic.mdl") = info_player_zombie      : "ZS: Zombies can spawn here." []
@PointClass base(PlayerClass, Angles, ZSSpawn) studio("models/zombie/classic.mdl") = info_player_undead      : "ZS: Zombies can spawn here. Alias of info_player_zombie." []
@PointClass base(PlayerClass, Angles, ZSSpawn) studio("models/zombie/classic.mdl") = info_player_zombie_boss : "ZS: Boss Zombies will spawn here." []
@PointClass base(PlayerClass, Angles, ZSSpawn) studio("models/editor/playerstart.mdl") = info_player_redeemed    : "ZS: Redeemed players can spawn here. Use of this is optional." []

@PointClass base(Targetname, Angles) studio("models/props_wasteland/medbridge_post01.mdl") = info_sigilnode : "ZS: Manual Placement of Sigils ONLY when dynamic placement isn't enough."
[
	// Keys
	forcespawn(choices) : "Force Spawn" : 0 : "Forces this sigil to always spawn" =
	[
		1 : "Yes"
		0 : "No"
	]
	disableteleports(choices) : "Disable Teleports" : 0 : "Disables teleporting from this sigil" =
	[
		1 : "Yes"
		0 : "No"
	]

	// Outputs
	output OnSigilSpawn(void)   :   "fired when a sigil spawns in this location."
	output OnCorrupt(void) 	    :   "fired when the sigil is corrupted."
	output OnUnCorrupt(void)    :   "fired when the sigil is uncorrupted."
]

@PointClass base(Targetname) = info_noskills : "ZS: Disables the use of ZS skills." []

@PointClass base(Targetname) = logic_beats  : "ZS: Allows you to turn beats (the ambient music) on or off."
[
	// Keys
	enabled(choices) : "Enabled" : 1 : "Allows ZS beats" =
	[
		1 : "Yes"
		0 : "No"
	]

	// Inputs
	input enable(void)  : "Enables beats."
	input disable(void) : "Disables beats."
]

@PointClass base(Targetname) = logic_nobuy  : "ZS: Allows you to disable purchases from the points shop (arsenal crate/pack and sigil only)."
[
	// Keys
	enabled(choices) : "Enabled" : 1 : "Allows purchasing from the points shop" =
	[
		1 : "Yes"
		0 : "No"
	]

	// Inputs
	input enable(void)  : "Enables purchases."
	input disable(void) : "Disables purchases."
]

@PointClass base(Targetname) = logic_dynamicspawning : "ZS: Allows you to control dynamic spawning."
[
	// Keys
	enabled(choices) : "Enabled" : 1 : "Should dynamic spawning be on?" =
	[
		1 : "Yes"
		0 : "No"
	]

	// Inputs
	input enable(void)  : "Enable dynamic spawning."
	input disable(void) : "Disable dynamic spawning."
]

@PointClass base(Targetname) = logic_gamerules  : "ZS: Allows you to control game rules."
[
	// Keys
	disablefreshdead(choices) : "Disable Fresh Dead" : 0 : "Prevents humans from turning into fresh dead on death." =
	[
		1 : "Yes"
		0 : "No"
	]
	nosigils(choices) : "Disable Sigils" : 0 : "Prevents sigils from spawning. Humans win at the end of the last wave or when logic_winlose is triggered." =
	[
		1 : "Yes"
		0 : "No"
	]
	noskills(choices) : "Disable Skills" : 0 : "Disables the use of skills." =
	[
		1 : "Yes"
		0 : "No"
	]
	globalsigilname(string)  : "Global Sigil Name" : "Sigil" : "Sets the global highlight name of all sigils."
	mapreplays(float)  : "Round Limit" : 2 : "Allows you to override the number of replays. If set to 1 the map will not replay after the first round. If set to 0 the map will allow unlimited restarts up until the timelimit runs out (default 15 minutes)."
	nailhpmul(float) : "Multiplier for Barricade Health" : 1 : "Global multiplier for the amount of barricade health props have when nailed."
	nestdistancemul(float)  : "Multiplier for Nest Distance" : 1 : "Adjust the distance from humans required to build nests. Decrease to make it easier to build nests closer to barricade spots."
	nestverticalskewmul(float) : "Multiplier for Nest Vertical Skew" : 1 : "Adjust vertical skew distance for nests. Increase to make it easier to create nests on roofs, or on lower or upper floors of multi-story buildings. Better to leave this at 1."
	noescapedoors(float) : "Disable Escape Doors" : 0 : "Prevents escape doors from appearing."
	nometagame(float) : "Disable Metagame" : 0 : "Disables zombie buffs, zombie class uplifts and great evils from spawning."
	zombiesigildamagemul(float) : "Multiplier for Zombie Sigil Damage" : 1 : "Multiplier for the amount of damage sigils take from zombies."
	humansigildamagemul(float) : "Multiplier for Human Sigil Damage" : 1 : "Multiplier for the amount of damage sigils take from humans."
	sigilcount(float) : "Sigil Count" : 3 : "Allows you to override the number of sigils that spawn."
	startzombiepercent(float) : "Starting Infliction" : "0.14" : "Allows you to override the percentage of starting zombies. If set to 0.14 then 14 percent of players will become zombies at the start of a round."
]

@PointClass base(Targetname,Origin) iconsprite("particles/smokey") sphere( radius ) = zombiegasses  : "ZS: Manually place a point for the zombies' noxious gases."
[
	// Keys
	radius(integer) : "Radius" : 250 : "Radius that this can damage humans/heal zombies."
]

@PointClass base(Targetname) = logic_pickupdrop : "ZS: Controls events when players pickup or drop things."
[
	// Keys
	EntityToWatch(target_destination) : "Entity to Watch" : " " : "Name of the entity to watch (for outputs)."

	// Inputs
	input ForceDrop(string)     : "Forces the dropping of something that's picked up by a human."
	input DisablePickup(string) : "Disables human pickups for the specified entity. Does not force dropping if currently carried, use the above input."
	input EnablePickup(string)  : "Enables human pickups for the specified entity."

	// Outputs
	output OnPickedUp(void)     : "Activator is the player, caller is the entity that was picked up."
	output OnDropped(void)      : "Activator is the player, caller is the entity that was picked up."

]

@PointClass base(Targetname) = logic_points : "ZS: Allows you to control and call outputs based on points."
[
	// Inputs
	input addtoactivator(float)           : "Adds <number> to the activator."
	input addtocaller(float)              : "Adds <number> to the caller."
	input takefromactivator(integer)      : "Takes <number> from the activator."
	input takefromcaller(integer)         : "Takes <number> from the caller."
	input setactivatoramount(integer)     : "Sets the amount that activator has to <number>."
	input setcalleramount(integer)        : "Sets the amount that caller has to <number>."
	input callifactivatorhave(integer)    : "If the activator has this amount then OnConditionPassed is thrown, otherwise OnConditionFailed."
	input callifactivatornothave(integer) : "If the activator does bot have this amount then OnConditionPassed is thrown, otherwise OnConditionFailed."
	input callifcallerhave(integer)       : "If the caller has this amount then OnConditionPassed is thrown, otherwise OnConditionFailed."
	input callifcallernothave(integer)    : "If the call does not have this amount then OnConditionPassed is thrown, otherwise OnConditionFailed."

	// Outputs
	output OnConditionPassed(void)        : "Thrown by ourselves when a condition is passed. The activator is always the player in question. The arguments are the amount that was checked against."
	output OnConditionFailed(void)        : "Thrown by ourselves when a condition is failed. The activator is always the player in question. The arguments are the amount that was checked against."
]

@PointClass base(Targetname) = logic_brains : "ZS: Allows you to control and call outputs based on brains."
[
	// Inputs
	input addtoactivator(integer)         : "Adds <number> to the activator."
	input addtocaller(integer)            : "Adds <number> to the caller."
	input takefromactivator(integer)      : "Takes <number> from the activator."
	input takefromcaller(integer)         : "Takes <number> from the caller."
	input setactivatoramount(integer)     : "Sets the amount that activator has to <number>."
	input setcalleramount(integer)        : "Sets the amount that caller has to <number>."
	input callifactivatorhave(integer)    : "If the activator has this amount then OnConditionPassed is thrown, otherwise OnConditionFailed."
	input callifactivatornothave(integer) : "If the activator does bot have this amount then OnConditionPassed is thrown, otherwise OnConditionFailed."
	input callifcallerhave(integer)       : "If the caller has this amount then OnConditionPassed is thrown, otherwise OnConditionFailed."
	input callifcallernothave(integer)    : "If the call does not have this amount then OnConditionPassed is thrown, otherwise OnConditionFailed."
	input redeemactivator(void)           : "Instantly redeems the activator."
	input redeemcaller(void)              : "Instantly redeems the caller."
	input setredeembrains(integer)        : "Sets the amount of brains required for a zombie to automatically redeem. Setting it to 0 means no automatic redemptions."

	// Outputs
	output OnConditionPassed(void)        : "Thrown by ourselves when a condition is passed. The activator is always the player in question. The arguments are the amount that was checked against."
	output OnConditionFailed(void)        : "Thrown by ourselves when a condition is failed. The activator is always the player in question. The arguments are the amount that was checked against."
]

@PointClass base(Targetname) = logic_startingloadout : "ZS: Allows you to control what people start with."
[
	// Keys
	startingloadout(string) : "Starting Loadout" : "worth" : "Sets the starting load out for all new humans. This is a list of entity classes which is then separated by commas. For example: weapon_zs_peashooter:1,weapon_zs_axe:1,item_ammo_pistol:2 would give everyone a peashooter, an axe, and spawn two boxes of pistol ammo on them. It also accepts none for absolutely no starting items and worth for using the worth menu (default)."

	// Inputs
	input setstartingloadout(string) : "Sets the keyvalue"
]

@PointClass base(Targetname) = logic_worth : "ZS: Allows you to control Worth."
[
	// Keys
	startingworth(integer) : "Starting Worth" : 100 : "The amount of Worth to start with. Use 0 to disable Worth."

	// Inputs
	input setstartingworth(integer) : "Sets the amount of worth to start with."
]

@PointClass base(Targetname) = logic_barricade : "ZS: Allows or disallows specific entities from being nailed."
[
	// Inputs
	input disablethese(string) : "Takes the arguments in the form of a comma-separated array and disables any entities with that name. For example, disablethese objective1,somethingimportant,somethingelse. This would disable nailing of those entities."
	input enablethese(string)  : "Takes the arguments in the form of a comma-separated array and enables any entities with that name. For example, enablethese objective1,somethingimportant,somethingelse. This would enable nailing of those entities."
]

@PointClass base(Targetname) = logic_difficulty : "ZS: Adjusts the difficulty of the game."
[
	// Inputs
	input setzombiespeedmultiplier(float)  : "Multiplier for Zombie speed."
	input setzombiedamagemultiplier(float) : "Multiplier for Zombie damage."
]

@PointClass base(Targetname) = logic_experience : "ZS: Adjusts the amount of XP players receive for a map."
[
	// Keys
	humanxpmulti(float) : "Human XP multiplier" : 1 : "Human XP multiplier."
	zombiexpmulti(float) : "Zombie XP multiplifer" : 1 : "Zombie XP multiplier."

	// Inputs
	input sethumanxpmulti(float)  : "Set Multiplier for Human XP."
	input setzombiexpmulti(float) : "Set Multiplier for Zombie XP."
]

@PointClass base(Targetname) = logic_pickups : "ZS: Allows you to control how much stuff people can pickup in the map. Only things placed by the mapper work with this system. Stuff from dead humans doesn't count."
[
	// Keys
	maxweaponpickups(integer)      : "Max Weapon Pickups"      : 5 : "How many weapons a player can pickup from the map."
	maxammopickups(integer)        : "Max Ammo Pickups"        : 5 : "How many ammo boxes a player can pickup from the map."
	maxflashlightpickups(integer)  : "Max Flashlight Pickups"  : 5 : "How many flashlight batteries a player can pickup from the map."
	weaponrequiredforammo(choices) : "Correct Weapon Required" : 0 : "If 1 then players must have a weapon that takes the ammo before being able to pick up an ammo box." =
	[
		1 : "Yes"
		0 : "No"
	]

	// Inputs
	input setmaxweaponpickups(integer)      : "Set the number of weapons a player can pickup from the map."
	input setmaxammopickups(integer)        : "Set the number of ammo boxes a player can pickup from the map."
	input setmaxflashlightpickups(integer)  : "Set the number of flashlight batteries a player can pickup from the map."
	input setweaponrequiredforammo(integer) : "If 1 then players must have a weapon that takes the ammo before being able to pick up an ammo box."
]

@PointClass base(Targetname) = logic_classunlock  : "ZS: Allows you to control class unlocks."
[
	// Keys
	class(string)          : "Class" : "zombie" : "Sets the name of the class to watch for any outputs."
	bossesenabled(choices) : "Enable Bosses" : 1 : "When enabled, bosses spawn at wave end as normal." =
	[
		1 : "Yes"
		0 : "No"
	]
	disableclassswitch(choices) : "Disable Class Selection" : 0 : "Disables pressing F3 to open the class selection menu." =
	[
		1 : "Yes"
		0 : "No"
	]

	// Inputs
	input unlockclass(string)       : "Forces a class to be unlocked."
	input lockclass(string)         : "Forces a class to be locked."
	input setbossesenabled(integer) : "Enables or disables boss zombies."

	// Outputs
	output OnClassUnlocked(void)    : "Called when the class we're watching's class is unlocked by the game. This output isn't called if the class is unlocked by any logic_classunlock entities, only by the game."
]

@PointClass studio("models/crossbow_bolt.mdl") base(Targetname,Origin,Angles) = prop_nail  : "ZS: Allows you to manually place nails."
[
	// Keys
	healthoverride(integer) : "Health Override" : -1 : "Sets the nail's maximum health to a specific number. Set to -1 or 0 to disable override"
	healthmultiplier(float) : "Health Multiply" : 1  : "Multiply the nail's default maximum health by this number."
	unremovable(choices)    : "Unremovable"     : 0  : "Set to yes to make this nail unremovable by players." =
	[
		1 : "Yes"
		0 : "No"
	]

	// Inputs
	input sethealth(integer)           : "Sets the nail's remaining health."
	input attachto(target_destination) : "Parent to this entity."
	input nailto(target_destination)   : "Nail to this entity. Use attachto first and then this to weld the two. Use 'worldspawn' here to weld to the world."
	input setname(string)              : "Display this text as the owner name."
	input setunremovable(integer)      : "Set if this nail is unremovable."
	input toggleunremovable(integer)   : "Toggle unremovable state."
]

@PointClass studio("models/Items/BoxMRounds.mdl") base(Targetname, Parentname, Angles) = prop_ammo  : "ZS: Game Specific Ammo."
[
	// Keys
	ammotype(choices)           : "Ammo Type"  : "pistol"   : "Ammo type this entity becomes" =
	[
		"pistol"                : "Pistol"
		"smg1"                  : "Sub-Machine Gun"
		"ar2"                   : "Assault Rifle"
		"pulse"                 : "Pulse"
		"buckshot"              : "Shotgun"
		"357"                   : "Rifle"
		"XBowBolt"              : "Crossbow Bolts"
		"grenade"               : "Grenades"
		"SniperRound"           : "Barricade Boards"
		"sniperpenetratedround" : "Det-Packs"
		"Battery"               : "Medical Ammo"
		"striderminigun"        : "Message Beacons"
		"GaussEnergy"           : "Nails"
		"scrap"                 : "Scrap"
		"impactmine"            : "Explosives"
		"stone"                 : "Stones"
		"thumper"               : "Turrets"
		"chemical"              : "Chemicals"
	]
	amount(integer)             : "Amount" : 0 : "Amount of ammo that collecting this item gives"
	neverremove(choices)  		: "Never Remove" : 0 : "Never remove when used or damage, for repeated uses." =
		[
			0 : "No"
			1 : "Yes"
		]
	ignorepickupcount(choices)  : "Ignore Pickup Counter" : 0 : "Set to ignore a maxpickupcounter, if any." =
		[
			0 : "No"
			1 : "Yes"
		]
	ignoreuse(choices)          : "Ignore Use" : 0 : "Set to disable being able to pickup via use key" =
		[
			0 : "No"
			1 : "Yes"
		]

	// Inputs
	input givetoactivator(void)         : "Forces the ammo onto the activator."
	input setneverremove(integer)       : "Set to make infinite uses."
	input setignorepickupcount(integer) : "Set to ignore any max pickup counter."
	input setignoreuse(integer)         : "Set to disable being able to pickup via use key"
	input setammotype(string)         	: "Set to change the ammo type of this entity."

	// Outputs
	output OnPickupPassed(void)			: "Called when the ammo is given to the player."
	output OnPickupFailed(void)			: "Called when the ammo is not given to the player"
]

@PointClass studio("models/weapons/w_irifle.mdl") base(Targetname, Parentname, Angles) = prop_weapon  : "ZS: Game Specific Weapon."
[
	// Keys
	weapontype(choices)         : "Weapon Type" : "weapon_zs_m4" : "Weapon type this entity becomes" =
		[
			"weapon_zs_akbar"              : "Akbar Assault Rifle"
			"weapon_zs_amigo"              : "Amigo Assault Rifle"
			"weapon_zs_annabelle"          : "Annabelle"
			"weapon_zs_antidoteshot"       : "Antidote Shot"
			"weapon_zs_arsenalcrate"       : "Arsenal Crate"
			"weapon_zs_artemis"            : "Artemis Dual Crossbows"
			"weapon_zs_asmd"               : "ASMD Shock Rifle"
			"weapon_zs_avelyn"             : "Avelyn Multi Crossbow"
			"weapon_zs_axe"                : "Axe"
			"weapon_zs_azrael"             : "Azrael Gas Bolt Bow"
			"weapon_zs_barrage"            : "Barrage Grenade Launcher"
			"weapon_zs_barricadekit"       : "Aegis Barricade Kit"
			"weapon_zs_battleaxe"          : "Battleaxe Handgun"
			"weapon_zs_blaster"            : "Blaster Shotgun"
			"weapon_zs_bloodshotbomb"      : "Bloodshot bomb"
			"weapon_zs_boardpack"          : "Junk Pack"
			"weapon_zs_boomstick"          : "Boomstick"
			"weapon_zs_brassknuckles"      : "Brass Knuckles"
			"weapon_zs_broadside"          : "Broadside Missile Launcher"
			"weapon_zs_bulletstorm"        : "Bulletstorm SMG"
			"weapon_zs_bulwark"            : "Bulwark Minigun"
			"weapon_zs_bust"               : "Breen Bust"
			"weapon_zs_butcherknife"       : "Butcher Knife"
			"weapon_zs_camera"             : "Camera"
			"weapon_zs_charon"             : "Charon Repeating Crossbow"
			"weapon_zs_colossus"           : "Colossus Mass Driver"
			"weapon_zs_corgasgrenade"      : "Corrosive Gas Grenade"
			"weapon_zs_corruptedfragment"  : "Corrupted Sigil Fragment"
			"weapon_zs_crackler"           : "Crackler Assault Rifle"
			"weapon_zs_craftingpack"       : "Crafting Pack"
			"weapon_zs_crossbow"           : "Impaler Crossbow"
			"weapon_zs_crowbar"            : "Crowbar"
			"weapon_zs_crygasgrenade"      : "Cyro Gas Grenade"
			"weapon_zs_deagle"             : "Zombie Drill Desert Eagle"
			"weapon_zs_deathdealers"       : "Deathdealers Dual Shotguns"
			"weapon_zs_detpack"            : "Detonation Pack"
			"weapon_zs_douser"             : "Douser Chemical Pistol"
			"weapon_zs_drone"              : "Drone"
			"weapon_zs_electrohammer"      : "Electrohammer"
			"weapon_zs_eminence"           : "Eminence"
			"weapon_zs_ender"              : "Ender Automatic Shotgun"
			"weapon_zs_enkindler"          : "Enkindler Fire Mine Layer"
			"weapon_zs_executioner"        : "Executioner Axe"
			"weapon_zs_eraser"             : "Eraser Tactical Pistol"
			"weapon_zs_flashbomb"          : "Flash Bomb"
			"weapon_zs_fracture"           : "Fracture Shotgun"
			"weapon_zs_fryingpan"          : "Frying Pan"
			"weapon_zs_frotchet"           : "Frotchet"
			"weapon_zs_ffemitter"          : "Force Field Emitter"
			"weapon_zs_galestorm"          : "Gale storm SMG"
			"weapon_zs_glock3"             : "Crossfire Glock3 Pistol"
			"weapon_zs_gluon"              : "Helios Gluon Gun"
			"weapon_zs_grenade"            : "Grenade"
			"weapon_zs_gunturret"          : "Gun Turret"
			"weapon_zs_gunturret_buckshot" : "Blast Turret"
			"weapon_zs_gunturret_rocket"   : "Rocket Turret"
			"weapon_zs_hammer"             : "Carpenter's Hammer"
			"weapon_zs_hook"               : "Meat Hook"
			"weapon_zs_harpoon"            : "Harpoon"
			"weapon_zs_hunter"             : "Hunter Rifle"
			"weapon_zs_hurricane"          : "Hurricane Pulse SMG"
			"weapon_zs_inferno"            : "Inferno AUG"
			"weapon_zs_inquisitor"         : "Inquisitor Crossbow"
			"weapon_zs_jackhammer"         : "Jackhammer Drum Shotgun"
			"weapon_zs_juggernaut"         : "Juggernaut M249"
			"weapon_zs_keyboard"           : "Keyboard"
			"weapon_zs_kongolaxe"          : "Kongol Axe"
			"weapon_zs_ladel"              : "Ladle"
			"weapon_zs_lamp"               : "Lamp"
			"weapon_zs_longsword"          : "Type XIIIa Longsword"
			"weapon_zs_longarm"            : "Long Arm Handgun"
			"weapon_zs_m4"                 : "Stalker M4"
			"weapon_zs_magnum"             : "Ricochete Magnum"
			"weapon_zs_manhack"            : "Manhack"
			"weapon_zs_manhack_saw"        : "Manhack Saw"
			"weapon_zs_meattenderizer"     : "Meat Tenderizer"
			"weapon_zs_medicalkit"         : "Medical Kit"
			"weapon_zs_mediccloudbomb"     : "Medic Cloud Bomb"
			"weapon_zs_medicgun"           : "Savior Medic Gun"
			"weapon_zs_medicrifle"         : "Convalescence Medical Rifle"
			"weapon_zs_strengthshot"       : "Strength Shot Dart Gun"
			"weapon_zs_megamasher"         : "Mega Masher"
			"weapon_zs_messagebeacon"      : "Message Beacon"
			"weapon_zs_minelayer"          : "Minelayer"
			"weapon_zs_molotov"            : "Molotov Cocktail"
			"weapon_zs_nanitecloudbomb"    : "Nanite Cloud Bomb"
			"weapon_zs_novablaster"        : "Nova Blaster Pulse Revolver"
			"weapon_zs_novacolt"           : "Nova Colt Handcannon"
			"weapon_zs_oberon"             : "Oberon Pulse Shotgun"
			"weapon_zs_onyx"               : "Onyx Rifle"
			"weapon_zs_owens"              : "Owens Handgun"
			"weapon_zs_oxygentank"         : "Oxygen Tank"
			"weapon_zs_peashooter"         : "Peashooter Handgun"
			"weapon_zs_pipe"               : "Lead Pipe"
			"weapon_zs_plank"              : "Plank"
			"weapon_zs_pollutor"           : "Pollutor"
			"weapon_zs_pot"                : "Pot"
			"weapon_zs_powerfists"         : "Power Fists"
			"weapon_zs_proliferator"       : "Proliferator SMG"
			"weapon_zs_proxymine"          : "Proxy Mine"
			"weapon_zs_pulserifle"         : "Adonis Pulse Rifle"
			"weapon_zs_pushbroom"          : "Push Broom"
			"weapon_zs_quasar"             : "Quasar Pulse Rifle"
			"weapon_zs_quicksilver"        : "Quicksilver Semi-Auto Rifle"
			"weapon_zs_reaper"             : "Reaper UMP"
			"weapon_zs_rebarmace"          : "Rebar Mace"
			"weapon_zs_redeemers"          : "Redeemers Dual Handguns"
			"weapon_zs_remantler"          : "Remantler"
			"weapon_zs_repairfield"        : "Repair Field"
			"weapon_zs_renegade"           : "Renegade Rifle"
			"weapon_zs_resupplybox"        : "Resupply Box"
			"weapon_zs_ripper"             : "Ripper Discblade Launcher"
			"weapon_zs_rollermine"         : "Rollermine"
			"weapon_zs_sawedoff"           : "Splinter Sawed-Off Shotgun"
			"weapon_zs_sawhack"            : "Sawhack"
			"weapon_zs_scar"               : "Terminus Scar-L"
			"weapon_zs_scythe"             : "Great Scythe"
			"weapon_zs_seditionist"        : "Seditionist Handgun"
			"weapon_zs_shovel"             : "Shovel"
			"weapon_zs_sigilfragment"      : "Sigil Fragment"
			"weapon_zs_silencer"           : "Silencer SMG"
			"weapon_zs_slinger"            : "Slinger Bolt Pistol"
			"weapon_zs_sledgehammer"       : "Sledgehammer"
			"weapon_zs_slugrifle"          : "Tiny Slug Rifle"
			"weapon_zs_smelter"            : "Smelter Flak Cannon"
			"weapon_zs_smg"                : "Shredder SMG"
			"weapon_zs_spinfusor"          : "Spinfusor Pulse Disc Launcher"
			"weapon_zs_spoon"              : "Stirring Spoon"
			"weapon_zs_spotlamp"           : "Spot Lamp"
			"weapon_zs_stone"              : "Stone"
			"weapon_zs_stubber"            : "Stubber Rifle"
			"weapon_zs_stunbaton"          : "Stun Baton"
			"weapon_zs_sweepershotgun"     : "Sweeper Shotgun"
			"weapon_zs_swissarmyknife"     : "Knife"
			"weapon_zs_tithonus"           : "Tithonus Charged Shotgun"
			"weapon_zs_tempest"            : "Tempest Automatic Pistol"
			"weapon_zs_tosser"             : "Tosser SMG"
			"weapon_zs_tv"                 : "Camera TV"
			"weapon_zs_uzi"                : "Sprayer Uzi 9mm"
			"weapon_zs_waraxe"             : "Waraxe Handgun"
			"weapon_zs_wrench"             : "Wrench"
			"weapon_zs_zapper"             : "Zapper"
			"weapon_zs_zapper_arc"         : "Arc Zapper"
			"weapon_zs_zeus"               : "Zeus Voltaic Crossbow"
			"weapon_zs_z9000"              : "Z9000 Pulse Pistol"
		]
	empty(choices)             : "Empty" : 0 : "Set to empty the weapon of any default ammo" =
		[
			0 : "No"
			1 : "Yes"
		]
	neverremove(choices)       : "Never Remove" : 0 : "Never remove when used or damage, for repeated uses." =
		[
			0 : "No"
			1 : "Yes"
		]
	ignorepickupcount(choices) : "Ignore Pickup Counter" : 0 : "Set to ignore a maxpickupcounter, if any." =
		[
			0 : "No"
			1 : "Yes"
		]
	ignoreuse(choices)         : "Ignore Use" : 0 : "Set to disable being able to pickup via use key" =
		[
			0 : "No"
			1 : "Yes"
		]
	restrained(choices)        : "Restrained" : 0 : "Freeze the weapon in midair." =
		[
			0 : "No"
			1 : "Yes"
		]

	// Inputs
	input givetoactivator(void)         : "Forces the weapon onto the activator."
	input setneverremove(integer)       : "Set to make infinite uses."
	input setignorepickupcount(integer) : "Set to ignore any max pickup counter."
	input setignoreuse(integer)         : "Set to disable being able to pickup via use key"
	input setweapontype(string)         : "Set to change the weapon type of this entity."
	input setempty(string)        		: "Set to empty the weapon of any default ammo."

	// Outputs
	output OnPickupPassed(void)			: "Called when the weapon is given to the player."
	output OnPickupFailed(void)			: "Called when the weapon is not given to the player"
]

@PointClass studio("models/items/battery.mdl") base(Targetname, Parentname, Angles) = prop_invitem  : "ZS: Inventory Item."
[
	// Keys
	invitemtype(choices)         : "Inventory Item Type" : "trinket_blackcore" : "Inventory item type this entity becomes" = 
		[
			"trinket_acqmanifest"			: "Acquisitions Manifest"
			"trinket_acrobatframe"			: "Acrobat Frame"
			"trinket_aimaid"				: "Aiming Aid"
			"trinket_aimcomp"				: "Aim Compensator"
			"trinket_ammovestii"			: "Ammo Vest II"
			"trinket_ammovestiii"			: "Ammo Vest III"
			"trinket_analgestic"			: "Analgestic Implant"
			"trinket_antitoxinpack"			: "Antitoxin Package"
			"trinket_armband"				: "Armband"
			"trinket_arsenalpack"			: "Arsenal Pack"
			"trinket_autoreload"			: "Auto Reloader"
			"trinket_barbedarmor"			: "Barbed Armor"
			"trinket_biocleanser"			: "Bio Cleanser"
			"trinket_blastguard"			: "Blast Guard"
			"trinket_bloodpack"				: "Blood Transfusion Pack"
			"trinket_blueprintsi"			: "Blueprints"
			"trinket_blueprintsii"			: "Advanced Blueprints"
			"trinket_boxingtraining"		: "Boxing Training Manual"
			"trinket_cardpackagei"			: "Blood Package"
			"trinket_cardpackageii"			: "Blood Bank"
			"trinket_chemistry"				: "Chemistry"
			"trinket_climbinggear"			: "Climbing Gear"
			"trinket_composite"				: "Composite Underlay"
			"trinket_condiments"			: "Condiments"
			"trinket_cryoindu"				: "Cryogenic Inducer"
			"trinket_curativeii"			: "Curative Kit"
			"trinket_curbstompers"			: "Curb Stompers"
			"trinket_cutlery"				: "Cutlery Set"
			"trinket_emanual"				: "Escape Manual"
			"trinket_eodvest"				: "EOD Vest"
			"trinket_extendedmag"			: "Extended Magazine"
			"trinket_featherfallframe"		: "Feather Fall Frame"
			"trinket_forcedamp"				: "Force Dampener"
			"trinket_freezecat"				: "Freezing Catalyst"
			"trinket_gelidrounds"			: "Gelid Rounds"
			"trinket_hemoadrenali"			: "Hemo Adrenaline Amp I"
			"trinket_hemoadrenalii"			: "Hemo-Adrenaline Amplifier"
			"trinket_hemoadrenaliii"		: "Hemo Adrennaline Amplifier III"
			"trinket_hemostasis"			: "Hemostasis Implant"
			"trinket_iceburst"				: "Iceburst Shield"
			"trinket_ignitioncompound"		: "Ignition Compound"
			"trinket_kevlar"				: "Kevlar Vest"
			"trinket_loadingex"				: "Loading Exoskeleton"
			"trinket_longgrip"				: "Long Grip"
			"trinket_magnet"				: "Magnet"
			"trinket_mainsuite"				: "Maintenance Suite"
			"trinket_momentumsupsysii"		: "Momentum Support System II"
			"trinket_momentumsupsysiii"		: "Momentum Support System III"
			"trinket_necrosense"			: "Necrotic Senses Distorter"
			"trinket_nightvision"			: "Nightvision Goggles"
			"trinket_olympianframe"			: "Olympian Frame"
			"trinket_opsmatrix"				: "Operations Matrix"
			"trinket_oxygentank"			: "Oxygen Tank"
			"trinket_pathfinder"			: "Agility Magnifier"
			"trinket_portablehole"			: "Portable Hole"
			"trinket_powergauntlet"			: "Power Gauntlet"
			"trinket_processor"				: "Medical Processor"
			"trinket_promanifest"			: "Procurement Manifest"
			"trinket_pulseampi"				: "Pulse Amplifier I"
			"trinket_pulseampii"			: "Pulse Amplifier II"
			"trinket_pulseimpedance"		: "Pulse Impedance Module"
			"trinket_pyrorounds"			: "Pyroclast Rounds"
			"trinket_reachem"				: "Reactive Chemicals"
			"trinket_reactiveflasher"		: "Reactive Flasher"
			"trinket_refinedsub"			: "Refined Subscope"
			"trinket_regenimplant"			: "Regeneration Implant"
			"trinket_remedy"				: "Remedial Booster"
			"trinket_resonance"				: "Resonance Cascader"
			"trinket_resupplypack"			: "Resupply Pack"
			"trinket_sharpkit"				: "Finesse Kit"
			"trinket_sharpstone"			: "Sharp Stone"
			"trinket_supasm"				: "Superior Assembly"
			"trinket_targetingvisori"		: "Targeting Visor I"
			"trinket_targetingvisoriii"		: "Targeting Unifier"
			"trinket_vitamins"				: "Vitamins"
			"trinket_vitpackagei"			: "Health Package"
			"trinket_vitpackageii"			: "Vitality Bank"
			"trinket_voltaxicrounds"		: "Voltaxic Rounds"
			"trinket_welfare"				: "Welfare"
		]
	neverremove(choices)       : "Never Remove" : 0 : "Never remove when used or damage, for repeated uses." =
		[
			0 : "No"
			1 : "Yes"
		]

	// Inputs
	input givetoactivator(void)         : "Forces the weapon onto the activator."
]

@PointClass base(Targetname, Parentname) sphere( range ) = point_worldhint : "ZS: Allows you to create 3D hints and information tags."
[
	// Keys
	hint(string)    : "Hint"    : " " : "The hint to display."
	viewer(choices) : "Seen By" : 0   : "The team that can view us." =
	[
		"-1" : "Disabled"
		"0"  : "Everyone"
		"3"  : "Zombies"
		"4"  : "Humans"
	]
	range(integer)  : "Range" : 0 : "The range from the player's camera we must be in to see this hint. It can also be 0 for infinite."

	// Inputs
	input sethint(string)    : "Sets the hint to display."
	input setviewer(integer) : "Sets the team that can view us. Use 0 for everyone, -1 for no one (inactive), 3 for zombie, and 4 for human."
	input setrange(float)    : "Sets the range from the player's camera we must be in to see this hint. It can also be 0 for infinite which is the default."
]

@PointClass base(Targetname, Parentname) = prop_playergib  : "ZS: Allows you to manually place gibs."
[
	// Keys
	gibtype(choices) : "Gib Type"  : 1 : "Overrides the gib's type." =
	[
		1 : "Skull"        // "models/gibs/HGIBS.mdl"
		2 : "Spine"        // "models/gibs/HGIBS_spine.mdl"
		3 : "Rib"          // "models/gibs/HGIBS_rib.mdl"
		4 : "Scapula"      // "models/gibs/HGIBS_scapula.mdl"
		7 : "Small Chunk"  // "models/gibs/antlion_gib_medium_2.mdl"
		5 : "Medium Chunk" // "models/gibs/Antlion_gib_Large_1.mdl"
		6 : "Large Chunk"  // "models/gibs/Strider_Gib4.mdl"
	]
	lifetime(integer) : "Lifetime" : 0 : "Overrides how long for this gib should live. 0 for never automatically remove."
]

@PointClass base(Targetname) = logic_winlose : "ZS: When activated, this will end the round immediately, with the specified outcome."
[
	// Keys
	endslowmo(choices)   : "Enable Slow Motion Effect?" : 1 : "Enables or disables the slow motion effect at the end of the round." =
		[
			0 : "No"
			1 : "Yes"
		]
	endcamera(choices)   : "Enable Camera?" : 1 : "Enables or disables an end round camera." =
		[
			0 : "No"
			1 : "Yes"
		]
	endcamerapos(vector) : "Custom Camera Vector" : "" : "Sets a custom position of the end round camera."
	winmusic(sound)      : "Win Music" : "default" : "The music that plays when the human team have won the round. 'default' for normal function"
	losemusic(sound)     : "Lose Music" : "default" : "The music that plays when the human team have lost the round. 'default' for normal function"

	// Inputs
	input win(void)               : "Humans win the game, map over."
	input lose(void)              : "Humans lose the game, map over."
	input setendslomo(integer)    : "Enables or disables the slow motion effect at the end of the round."
	input setendcamera(integer)   : "Enables or disables an end round camera."
	input setendcamerapos(vector) : "Sets the vector for where the end round camera should go to."
	input setwinmusic(string)     : "The music that plays when the human team have won the round. 'default' for normal function."
	input setlosemusic(string)    : "The music that plays when the human team have lost the round. 'default' for normal function."
	// Outputs
	output onwin(void)            : "Called when humans win even if not by this entity."
	output onlose(void)           : "Called when humans lose even if not by this entity."
]

@PointClass base(Targetname) = logic_infliction : "ZS: Watches for the specified infliction level."
[
	// Keys
	infliction(float) : "Infliction" : "0.5" : "Defines infliction to watch for (float between 0.0 - 1.0)."

	// Outputs
	output OnInflictionReached(void) : "Called when the specified infliction level has been reached."
	output OnLastHuman(void)         : "Called when there is one person alive. !caller and !activator are both the last human's entity."
]

@PointClass base(Targetname) = logic_waves : "ZS: Watches for the start of the specified wave."
[
	// Keys
	wave(integer) : "Wave" : 1 : "Any On* outputs will watch for this wave. Use -1 for all waves."

	// Inputs
	input AdvanceWave(void)     : "Advances to the next wave and sets the wave to active."
	input EndWave(void)         : "Sets the time that the wave ends to this very moment."
	input StartWave(void)       : "Sets the time that the wave begins to this very moment."
	input SetWave(integer)      : "Sets the wave to the number specified. This does not change the wave state between active and inactive."
	input SetWaves(integer)     : "Sets the total amount of waves to the number specified. Don't worry about class unlocks, the gamemode does not use the max waves value directly."
	input SetWaveStart(integer) : "Sets the time that the wave will start to TimeNow + <time>. You should use this instead of delayed entity inputs."
	input SetWaveEnd(integer)   : "Sets the time that the wave will end to TimeNow + <time>. You should use this instead of delayed entity inputs."

	// Outputs
	output OnWaveStart(void)    : "Called when the specified wave has started."
	output OnWaveEnd(void)      : "Called when the specified wave has ended."
]

@PointClass base(Targetname) = point_zsmessage : "ZS: Custom message that is displayed with the specified message."
[
	// Keys
	team(choices)                    : "Team" : "all" : "Filter which team gets the message." =
	[
		"zombie"  : "Zombies"
		"human"   : "Humans"
		"private" : "Activator Only"
		"all"     : "All"
	]
	displaytime(integer)             : "Display Time" : 8 : "How long the input message displays for, does not have an effect on HUD messages."
	position(choices)                : "Message Position" : "center" : "Where the message is seen." =
	[
		"center" : "Center"
		"top"    : "Top Right"
	]
	textcolor(color255)              : "Text Colour" : "255 255 255" : "Sets the color of an input message."

	// Inputs
	input message(string)             : "What to display. Supports the markup library."
	input sethumanhudmessage(string)  : "Set a message to display in the human wave hud."
	input setzombiehudmessage(string) : "Set a message to display in the zombie wave hud."
	input clearhumanhudmessage(void)  : "Clear the message to display in the human wave hud."
	input clearzombiehudmessage(void) : "Clear the message to display in the zombie wave hud."
	input setdisplaytime(integer)     : "Change how long the input message displays for."
	input settextcolor(string)        : "Takes an 'R G B' string to change the color of the next message."
]

@PointClass base(Targetname) = logic_pantsmode : "ZS: When activated, this will set the special Pants Mode on."
[
	// Inputs
	input enable(void)  : "Enables pants mode."
	input disable(void) : "Disables pants mode."
]

@PointClass base(Targetname) = info_custommessage : "ZS: Allows several substrings to be concatenated together to form one message, attaches to messaging entities like game_text, point_worldhint and point_zsmessage"
[
	// Keys
	displayentity(target_destination) : "Target Messaging Entity" : "" : "The entity used to display the message, can be a targetname of a class game_text, point_worldhint or point_zsmessage"
	zsmessagemode(choices)            : "Point_zsmessage Method" :  0  : "If using a point_zsmessage, select the method of display with this key" =
	[
		0  : "Centred HUD Message"
		1  : "Corner Human HUD Message"
		2  : "Corner Zombie HUD Message"
	]
	string01(string)                  : "String 01" : "" : "Part 01 of the full string, there can be up to 99 of these."
	string02(string)                  : "String 02" : "" : "Part 02 of the full string, there can be up to 99 of these."
	string03(string)                  : "String 03" : "" : "Part 03 of the full string, there can be up to 99 of these."
	string04(string)                  : "String 04" : "" : "Part 04 of the full string, there can be up to 99 of these."
	string05(string)                  : "String 05" : "" : "Part 05 of the full string, there can be up to 99 of these."
	string06(string)                  : "String 06" : "" : "Part 06 of the full string, there can be up to 99 of these."

	// Inputs
	input displaystrings(string) : "Concatenates and displays the full string using the attached entity"
	input setstring01(string)    : "Sets part 01 of the full string, there can be up to 99 of these."
	input setstring02(string)    : "Sets part 02 of the full string, there can be up to 99 of these."
	input setstring03(string)    : "Sets part 03 of the full string, there can be up to 99 of these."
	input setstring04(string)    : "Sets part 04 of the full string, there can be up to 99 of these."
	input setstring05(string)    : "Sets part 05 of the full string, there can be up to 99 of these."
	input setstring06(string)    : "Sets part 06 of the full string, there can be up to 99 of these."

	// Outputs
	output OnDisplayed(void)     : "Called when the message has successfully displayed."
]

@PointClass base(Targetname) = logic_stripweapons : "ZS: Allows the map to strip all or specific weapons by classname"
[
	// Keys
	keepfists(choices) : "Keep Fists" : 1 : "If yes, the stripallweapons input strips all weapons but fists" =
	[
		0 : "No"
		1 : "Yes"
	]

	// Inputs
	input stripweapon(string)     : "Strips a single weapon as mentioned in arguments"
	input stripallweapons(string) : "Strips all the weapons the activator has, keeps fists if flag is true"
	input setkeepfists(integer)   : "If 1 the next stripallweapons inputs strip all weapons but fists"
]

///////////////////////////////////////////////////////////////////////////////////
// Gamemode - Weapons + Items /////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////

@PointClass base(Weapon)                                                        = weapon_map_base              : "Used for creating parentable map made weapons" []

@PointClass base(Weapon) studio("models/weapons/w_rif_ak47.mdl")                = weapon_zs_akbar              : "Ammo Type: Assault Rifle.\nA low clip size assault rifle." []
@PointClass base(Weapon) studio("models/weapons/w_rif_sg552.mdl")               = weapon_zs_amigo              : "Ammo Type: Assault Rifle.\nFill in the missing assault rifle role for the second tier." []
@PointClass base(Weapon) studio("models/weapons/w_annabelle.mdl")               = weapon_zs_annabelle          : "Ammo Type: Rifle.\nThis rifle loads rounds individually." []
@PointClass base(Weapon) studio("models/weapons/w_pist_deagle.mdl")             = weapon_zs_antidoteshot       : "Fires antidote bombs that cure poison and remove/protect from status effects." []
@PointClass base(Weapon) studio("models/items/item_item_crate.mdl")             = weapon_zs_arsenalcrate       : "Allows people to purchase weapons, the owner gets a discount." []
@PointClass base(Weapon) studio("models/weapons/w_Pistol.mdl")                  = weapon_zs_artemis            : "Ammo Type: Bolts.\nA pair of minature crossbows. Fires quick successions of explosive bolts." []
@PointClass base(Weapon) studio("models/weapons/w_snip_awp.mdl")                = weapon_zs_asmd               : "Ammo Type: Pulse.\nFires pulse rays. Alt fire launches protectile that can be detonated with left click." []
@PointClass base(Weapon) studio("models/weapons/w_Pistol.mdl")                  = weapon_zs_avelyn             : "Ammo Type: Bolts.\nA triple loaded crossbow." []
@PointClass base(Weapon) studio("models/props/cs_militia/axe.mdl")              = weapon_zs_axe                : "An axe..." []
@PointClass base(Weapon) studio("models/weapons/w_crossbow.mdl")                = weapon_zs_azrael             : "Ammo Type: Chemicals.\nLaunches bolts that leave traces of damaging chemical gas. Gas can weaken zombie attacks." []
@PointClass base(Weapon) studio("models/weapons/w_smg_ump45.mdl")               = weapon_zs_barrage            : "Ammo Type: Explosives.\nFires multiple grenades that detonate on impact with enemies or on the third bounce." []
@PointClass base(Weapon) studio("models/weapons/w_rocket_launcher.mdl")         = weapon_zs_barricadekit       : "Ammo Type: Boards.\nA ready-to-go, all-in-one board deployer." []
@PointClass base(Weapon) studio("models/weapons/w_pist_usp.mdl")                = weapon_zs_battleaxe          : "Ammo Type: Pistol.\nHigh Damage for a starting pistol." []
@PointClass base(Weapon) studio("models/weapons/w_supershorty.mdl")             = weapon_zs_blaster            : "Ammo Type: Shotgun.\nA small shotgun" []
@PointClass base(Weapon) studio("models/healthvial.mdl")                        = weapon_zs_bloodshotbomb      : "A cloud of strength and defence boosting gas.\nAlso has a small blood armor boost." []
@PointClass base(Weapon) studio("models/props_debris/wood_board06a.mdl")        = weapon_zs_boardpack          : "Ammo Type: Boards.\nIt's simply a pack of wooden junk kept together with some duct tape." []
@PointClass base(Weapon) studio("models/weapons/w_shotgun.mdl")                 = weapon_zs_boomstick          : "Ammo Type: Shotgun.\nThis shotgun allows you to load up to four shells in the chamber at once." []
@PointClass base(Weapon) studio("models/props_c17/utilityconnecter005.mdl")     = weapon_zs_brassknuckles      : "Some brass knuckles for fists." []
@PointClass base(Weapon) studio("models/weapons/w_rocket_launcher.mdl")         = weapon_zs_broadside          : "Ammo type: Explosives\nLaunches missiles that deal considerable AOE explosive damage. Right click remotely detonates them." []
@PointClass base(Weapon) studio("models/weapons/w_smg_p90.mdl")                 = weapon_zs_bulletstorm        : "Ammo Type: SMG.\nHas Storm firing mode: Fire rate is 60% but two bullets are fired at once." []
@PointClass base(Weapon) studio("models/weapons/w_physics.mdl")                 = weapon_zs_bulwark            : "Incredibly heavy duty minigun for terminating zombies." []
@PointClass base(Weapon) studio("models/props_combine/breenbust.mdl")           = weapon_zs_bust               : "Craftable Weapon.\nRecipe: Plank + Breen's Bust" []
@PointClass base(Weapon) studio("models/props_lab/cleaver.mdl")                 = weapon_zs_butcherknife       : "A large cleaver, for hacking and slashing body parts." []
@PointClass base(Weapon) studio("models/props_c17/light_domelight02_off.mdl")   = weapon_zs_camera             : "Deployable Camera." []
@PointClass base(Weapon) studio("models/weapons/w_crossbow.mdl")                = weapon_zs_charon             : "Ammo Type: Bolts.\nA rapid firing crossbow with no special effect." []
@PointClass base(Weapon) studio("models/weapons/w_shot_xm1014.mdl")             = weapon_zs_colossus           : "Ammo Type: Rifle.\nMass Driver that projects rifle ammo rounds at extremely high velocity." []
@PointClass base(Weapon) studio("models/healthvial.mdl")                        = weapon_zs_corgasgrenade      : "Corrosive gas deals damage over time. Zombies lose damage resistance in area of effect." []
@PointClass base(Weapon) studio("models/weapons/w_bugbait.mdl")                 = weapon_zs_corruptedfragment  : "Returns you to any corrupted Sanity Sigil." []
@PointClass base(Weapon) studio("models/weapons/w_rif_famas.mdl")               = weapon_zs_crackler           : "Ammo Type: Assault Rifle.\nA reduced fire-rate assault rifle'" []
@PointClass base(Weapon) studio("models/props_debris/wood_board06a.mdl")        = weapon_zs_craftingpack       : "A pack of assorted items which seem to have greater use when combined with other things." []
@PointClass base(Weapon) studio("models/weapons/w_crossbow.mdl")                = weapon_zs_crossbow           : "Ammo Type: Bolts.\nThis ancient weapon can easily skewer groups of zombies." []
@PointClass base(Weapon) studio("models/weapons/w_crowbar.mdl")                 = weapon_zs_crowbar            : "Instantly kills headcrabs." []
@PointClass base(Weapon) studio("models/healthvial.mdl")                        = weapon_zs_crygasgrenade      : "Cryo gas deals damage over time. Zombies move slower and attack slower." []
@PointClass base(Weapon) studio("models/weapons/w_pist_deagle.mdl")             = weapon_zs_deagle             : "Ammo Type: Pistol.\nThis handgun uses high-powered rounds that have more knockback than others." []
@PointClass base(Weapon) studio("models/weapons/w_pist_elite.mdl")              = weapon_zs_deathdealers       : "Ammo Type: Shotgun.\nA unique pair of fast firing, high damage shotguns." []
@PointClass base(Weapon) studio("models/weapons/w_c4_planted.mdl")              = weapon_zs_detpack            : "A pack of explosives that can be placed on surfaces and detonated remotely." []
@PointClass base(Weapon) studio("models/weapons/w_pist_p228.mdl")               = weapon_zs_douser             : "Ammo Type: Chemicals.\nPistol which fires small chemical blobs that deal minimal projectile damage." []
@PointClass base(Weapon) studio("models/combine_scanner.mdl")                   = weapon_zs_drone              : "A deployable, remotely controlled device. Ideal for scouting, retrieval and targeted attacks." []
@PointClass base(Weapon) studio("models/weapons/w_hammer.mdl")                  = weapon_zs_electrohammer      : "Craftable Weapon.\nRecipe: Battery and Hammer " []
@PointClass base(Weapon) studio("models/weapons/w_crossbow.mdl")                = weapon_zs_eminence           : "Ammo Type: Explosives. Weird light orb particle gun cannon." []
@PointClass base(Weapon) studio("models/weapons/w_rif_galil.mdl")               = weapon_zs_ender              : "Ammo Type: Shotgun.\nAn automatic shotgun" []
@PointClass base(Weapon) studio("models/weapons/w_rocket_launcher.mdl")         = weapon_zs_enkindler          : "A mine layer that lays mines that ignite zombies." []
@PointClass base(Weapon) studio("models/weapons/w_crowbar.mdl")                 = weapon_zs_executioner        : "An axe capable of executioning attacks." []
@PointClass base(Weapon) studio("models/weapons/w_pist_fiveseven.mdl")          = weapon_zs_eraser             : "Ammo Type: Pistol.\nDamage increases as the gun empties. The last shot is worth triple damage." []
@PointClass base(Weapon) studio("models/weapons/w_eq_flashbang.mdl")            = weapon_zs_flashbomb          : "Deals no damage but stuns all zombies around the flash, especially if they're looking at it." []
@PointClass base(Weapon) studio("models/weapons/w_shot_m3super90.mdl")          = weapon_zs_fracture           : "A pump shotgun that shoots in a line spread." []
@PointClass base(Weapon) studio("models/props_c17/metalpot002a.mdl")            = weapon_zs_fryingpan          : "A frying pan..." []
@PointClass base(Weapon) studio("models/props/cs_militia/axe.mdl")              = weapon_zs_frotchet           : "Craftable Weapon.\nRecipe: Axe and Eternal Ice Shard" []
@PointClass base(Weapon) studio("models/props_lab/lab_flourescentlight002b.mdl")= weapon_zs_ffemitter          : "Force Field Emitter\nBlocks zombie projectiles but will not stop humans or zombies from passing." []
@PointClass base(Weapon) studio("models/weapons/w_smg_mac10.mdl")               = weapon_zs_galestorm          : "Ammo Type: SMG.\nSpray-firing uzi craft variant." []
@PointClass base(Weapon) studio("models/weapons/w_pist_glock18.mdl")            = weapon_zs_glock3             : "Ammo Type: Pistol.\nA mult-shot pistol" []
@PointClass base(Weapon) studio("models/weapons/w_superphyscannon.mdl")         = weapon_zs_gluon              : "Ammo Type: Pulse.\nProjects a stream of gluons at the target, causing immense damage." []
@PointClass base(Weapon) studio("models/weapons/w_grenade.mdl")                 = weapon_zs_grenade            : "A simple fragmentation grenade." []
@PointClass base(Weapon) studio("models/combine_turrets/floor_turret.mdl")      = weapon_zs_gunturret          : "Ammo Type: SMG.\nThis automated turret requires constant upkeep to be useful." []
@PointClass base(Weapon) studio("models/combine_turrets/floor_turret.mdl")      = weapon_zs_gunturret_buckshot : "Ammo Type: Shotgun.\nAn automated turret that fires spread shots." []
@PointClass base(Weapon) studio("models/combine_turrets/floor_turret.mdl")      = weapon_zs_gunturret_rocket   : "Ammo Type: Explosives.\nAn automated turret that fires rockets." []
@PointClass base(Weapon) studio("models/weapons/w_hammer.mdl")                  = weapon_zs_hammer             : "Ammo Type: Nails.\nA simple but extremely useful tool. Allows you to hammer in nails." []
@PointClass base(Weapon) studio("models/props_junk/meathook001a.mdl")           = weapon_zs_hook               : "Oi! Fresh Meat!" []
@PointClass base(Weapon) studio("models/props_junk/harpoon002a.mdl")            = weapon_zs_harpoon            : "A throwable harpoon with long range." []
@PointClass base(Weapon) studio("models/weapons/w_snip_awp.mdl")                = weapon_zs_hunter             : "Ammo Type: Rifle.\nFires special large caliber rounds." []
@PointClass base(Weapon) studio("models/weapons/w_smg1.mdl")                    = weapon_zs_hurricane          : "Ammo Type: Pulse.\nFires shots that slow targets. The rate increases as the magazine empties." []
@PointClass base(Weapon) studio("models/weapons/w_rif_aug.mdl")                 = weapon_zs_inferno            : "Ammo Type: Assault Rifle.\nAn assault rifle with impressive accuracy." []
@PointClass base(Weapon) studio("models/weapons/w_pistol.mdl")                  = weapon_zs_inquisitor         : "Ammo Type: Bolts.\nA practical design in a one-hand version. Pierces a single zombie." []
@PointClass base(Weapon) studio("models/weapons/w_rif_galil.mdl")               = weapon_zs_jackhammer         : "Ammo Type: Shotgun \nAn automatic drum shotgun with a large clip size." []
@PointClass base(Weapon) studio("models/weapons/w_mach_m249para.mdl")           = weapon_zs_juggernaut         : "Ammo Type: Assault Rifle \nA light machine gun." []
@PointClass base(Weapon) studio("models/props_c17/computer01_keyboard.mdl")     = weapon_zs_keyboard           : "For the keyboard warrior." []
@PointClass base(Weapon) studio("models/props/cs_militia/axe.mdl")              = weapon_zs_kongolaxe          : "Butcher's Knife" []
@PointClass base(Weapon) studio("models/props_lab/ladel.mdl")                   = weapon_zs_ladel              : "A metal ladel." []
@PointClass base(Weapon) studio("models/props_interiors/Furniture_Lamp01a.mdl") = weapon_zs_lamp               : "Lamp them one." []
@PointClass base(Weapon) studio("models/weapons/w_crowbar.mdl")                 = weapon_zs_longsword          : "A longsword to cleave through zombies." []
@PointClass base(Weapon) studio("models/weapons/w_357.mdl")                     = weapon_zs_longarm            : "Ammo Type: Pistol.\nThis gun's bullets deal extremely large amounts of damage. " []
@PointClass base(Weapon) studio("models/weapons/w_rif_m4a1.mdl")                = weapon_zs_m4                 : "Ammo Type: Assault Rifle.\nUsing this gun reduces the distance that zombies can see your aura." []
@PointClass base(Weapon) studio("models/weapons/w_357.mdl")                     = weapon_zs_magnum             : "Ammo Type: Pistol.\nThis gun's bullets will bounce off of walls which deal extra damage." []
@PointClass base(Weapon) studio("models/manhack.mdl")                           = weapon_zs_manhack            : "A remotely controlled device. Ideal for scouting and attacking from safety." []
@PointClass base(Weapon) studio("models/manhack.mdl")                           = weapon_zs_manhack_saw        : "Craftable Weapon.\nRecipe: Sawblade and Manhack" []
@PointClass base(Weapon) studio("models/weapons/w_crowbar.mdl")                 = weapon_zs_meattenderizer     : "Culinary tool used to smash zombies into mincemeat." []
@PointClass base(Weapon) studio("models/items/healthkit.mdl")                   = weapon_zs_medicalkit         : "Ammo Type: Battery.\nFor healing yourself and others. For points of course." []
@PointClass base(Weapon) studio("models/healthvial.mdl")                        = weapon_zs_mediccloudbomb     : "Explodes in to a cloud of healing gas. Heals 2.5 health per second, for 10 seconds." []
@PointClass base(Weapon) studio("models/weapons/w_pistol.mdl")                  = weapon_zs_medicgun           : "Ammo Type: Medical Ammo.\nFires medical darts which can heal at a range." []
@PointClass base(Weapon) studio("models/weapons/cstrike/c_snip_scout.mdl")      = weapon_zs_medicrifle         : "Ammo Type: Medical Ammo.\nFires medical darts which can heal at a range.\nDarts can also debuff zombies." []
@PointClass base(Weapon) studio("models/weapons/w_pistol.mdl")                  = weapon_zs_strengthshot       : "Ammo Type: Medical Ammo.\nFires performance enhancing darts which can increase a target's damage." []
@PointClass base(Weapon) studio("models/weapons/w_sledgehammer.md")             = weapon_zs_megamasher         : "Craftable Weapon.\nRecipe: Explosive Barrel + Hammer" []
@PointClass base(Weapon) studio("models/props_combine/combine_mine01.mdl")      = weapon_zs_messagebeacon      : "These display messages that can be seen by fellow human players." []
@PointClass base(Weapon) studio("models/weapons/w_rocket_launcher.mdl")         = weapon_zs_minelayer          : "DIY Home Defense." []
@PointClass base(Weapon) studio("models/props_junk/glassbottle01a.mdl")         = weapon_zs_molotov            : "A highly flammable concoction, use at your own risk. " []
@PointClass base(Weapon) studio("models/healthvial.mdl")                        = weapon_zs_nanitecloudbomb    : "Explodes in to a cloud of nanites. Heals all props and deployables in the radius." []
@PointClass base(Weapon) studio("models/weapons/w_357.mdl")                     = weapon_zs_novablaster        : "Ammo Type: Pulse.\nA ricochet pulse projectile revolver." []
@PointClass base(Weapon) studio("models/weapons/w_pist_deagle.mdl")             = weapon_zs_novacolt           : "Ammo Type: Pistol.\nA heavy handgun which deals impressive burst damage but has a significant reload time." []
@PointClass base(Weapon) studio("models/weapons/w_shotgun.mdl")                 = weapon_zs_oberon             : "Ammo Type: Pulse.\nFires bursts of pulse shots that slow targets." []
@PointClass base(Weapon) studio("models/weapons/w_snip_sg550.mdl")              = weapon_zs_onyx               : "Reliable balanced sniper rifle with good accuracy, clip size and damage." []
@PointClass base(Weapon) studio("models/weapons/w_pistol.mdl")                  = weapon_zs_owens              : "Ammo Type: Pistol.\nSprays single pistol shots at a target." []
@PointClass base(Weapon) studio("models/props_junk/propane_tank001a.mdl")       = weapon_zs_oxygentank         : "Trinket\nGrants a significant amount of extra breathing time while underwater. " []
@PointClass base(Weapon) studio("models/weapons/w_pist_p228.mdl")               = weapon_zs_peashooter         : "Ammo Type: Pistol.\nA high fire-rate and accuracy, but low damge pistol." []
@PointClass base(Weapon) studio("models/props_canal/mattpipe.mdl")              = weapon_zs_pipe               : "Moves zombie's vision on hit" []
@PointClass base(Weapon) studio("models/props_debris/wood_chunk03b.mdl")        = weapon_zs_plank              : "A solid piece of wood you can find pretty much anywhere" []
@PointClass base(Weapon) studio("models/weapons/w_smg_ump45.mdl")               = weapon_zs_pollutor           : "Launches acidic projectiles that have a chance to remove damage resistance" []
@PointClass base(Weapon) studio("models/props_interiors/pot02a.mdl")            = weapon_zs_pot                : "A pan with longer range" []
@PointClass base(Weapon) studio("models/weapons/w_grenade.mdl")                 = weapon_zs_powerfists         : "A pair of power fists. They are slower than conventional fist combat, but pack a hefty pulse powered punch." []
@PointClass base(Weapon) studio("models/weapons/w_smg_mac10.mdl")               = weapon_zs_proliferator       : "Ammo Type: SMG. Hold right click to use the Storm firing mode." []
@PointClass base(Weapon) studio("models/weapons/w_grenade.mdl")                 = weapon_zs_proxymine          : "A proximity mine that explodes when near zombies." []
@PointClass base(Weapon) studio("models/weapons/w_IRifle.mdl")                  = weapon_zs_pulserifle         : "Ammo Type: Pulse.\nAdonis Pulse Rifle. Deals massive damage and slows targets." []
@PointClass base(Weapon) studio("models/props_c17/pushbroom.mdl")               = weapon_zs_pushbroom          : "BrooooooooooOOOOOOOOOOOOOM!" []
@PointClass base(Weapon) studio("models/weapons/w_snip_awp.mdl")                = weapon_zs_quasar             : "Ammo Type: Pulse.\nA scoped rifle that slows targets." []
@PointClass base(Weapon) studio("models/weapons/w_snip_g3sg1.mdl")              = weapon_zs_quicksilver        : "Ammo Type: Rifle.\nA semi-automatic rifle." []
@PointClass base(Weapon) studio("models/weapons/w_smg_ump45.mdl")               = weapon_zs_reaper             : "Ammo Type: SMG.\nA low fire-rate, high powered sub-machinegun." []
@PointClass base(Weapon) studio("models/props_debris/rebar004b_48.mdl")         = weapon_zs_rebarmace          : "A big concrete mace. Moves zombie's vision on hit" []
@PointClass base(Weapon) studio("models/weapons/w_pist_elite.mdl")              = weapon_zs_redeemers          : "Ammo Type: Pistol.\nThe weapons you get when you redeem." []
@PointClass base(Weapon) studio("models/props_lab/powerbox01a.mdl")             = weapon_zs_remantler          : "A deployable device capable of combining two of the same weapon to return one upgraded version." []
@PointClass base(Weapon) studio("models/props/de_nuke/smokestack01.mdl")        = weapon_zs_repairfield        : "Ammo Type: Pulse.\nConsumes ammo to repair nearby props and deployables" []
@PointClass base(Weapon) studio("models/weapons/w_smg_ump45.mdl")               = weapon_zs_renegade           : "A rifle with high headshot damage and a decent clip size. Receives a resistance penetration buff from headshots." []
@PointClass base(Weapon) studio("models/Items/ammocrate_ar2.mdl")               = weapon_zs_resupplybox        : "Allows survivors to get ammunition for their current weapon." []
@PointClass base(Weapon) studio("models/weapons/w_smg_ump45.mdl")               = weapon_zs_ripper             : "An unusual weapon capable of launching sharp discs which bounce and that can headshot zombies." []
@PointClass base(Weapon) studio("models/roller.mdl")                            = weapon_zs_rollermine         : "A deployable, remotely controlled device.\nRolls along the ground, bouncing off zombies and dealing damage." []
@PointClass base(Weapon) studio("models/weapons/w_annabelle.mdl")               = weapon_zs_sawedoff           : "Ammo Type: Shotgun.\nCan fire both rounds at once for higher burst damage." []
@PointClass base(Weapon) studio("models/weapons/w_crowbar.mdl")                 = weapon_zs_sawhack            : "Craftable Weapon.\nRecipe: Sawblade and Axe" []
@PointClass base(Weapon) studio("models/weapons/w_snip_sg550.mdl")              = weapon_zs_scar               : "Ammo Type: Assault Rifle.\nFUDA" []
@PointClass base(Weapon) studio("models/weapons/w_crowbar.mdl")                 = weapon_zs_scythe             : "A great scythe that can pierce and cut through multiple zombies.\nHas a 3 hit combo, the last hit deals extra damage." []
@PointClass base(Weapon) studio("models/weapons/w_pist_deagle.mdl")             = weapon_zs_seditionist        : "This high-powered handgun has the ability to pierce through multiple zombies." []
@PointClass base(Weapon) studio("models/weapons/w_shovel.mdl")                  = weapon_zs_shovel             : "Instantly kills zombies that are knocked down." []
@PointClass base(Weapon) studio("models/weapons/w_bugbait.mdl")                 = weapon_zs_sigilfragment      : "Returns you to any uncorrupted Sanity Sigil." []
@PointClass base(Weapon) studio("models/weapons/w_smg_tmp.mdl")                 = weapon_zs_silencer           : "Ammo Type: SMG.\nVery high firerate SMG." []
@PointClass base(Weapon) studio("models/weapons/w_pist_fiveseven.mdl")          = weapon_zs_slinger            : "Ammo Type: Bolts.\nA basic bolt pistol gun." []
@PointClass base(Weapon) studio("models/weapons/w_sledgehammer.mdl")            = weapon_zs_sledgehammer       : "Do the Mario!" []
@PointClass base(Weapon) studio("models/weapons/w_shot_xm1014.mdl")             = weapon_zs_slugrifle          : "Ammo Type: Rifle.\nThis powerful rifle instantly kills any zombie with a head shot." []
@PointClass base(Weapon) studio("models/weapons/w_shot_m3super90.mdl")          = weapon_zs_smelter            : "Ammo Type: Scrap.\nLaunches a spray of hot shards of scrap in a flak pattern.\nAlt fire launches a flak bomb." []
@PointClass base(Weapon) studio("models/weapons/w_smg_mp5.mdl")                 = weapon_zs_smg                : "Ammo Type: SMG.\nA standard SMG." []
@PointClass base(Weapon) studio("models/weapons/w_crossbow.mdl")                = weapon_zs_spinfusor          : "Ammo Type: Pulse.\nLaunches highly explosive pulse projectiles." []
@PointClass base(Weapon) studio("models/weapons/w_crowbar.mdl")                 = weapon_zs_spoon              : "Culinary tool.\nA huge wooden stirring spoon." []
@PointClass base(Weapon) studio("models/props_combine/combine_light001a.mdl")   = weapon_zs_spotlamp           : "Allows you to place dynamic lighting." []
@PointClass base(Weapon) studio("models/props_junk/rock001a.mdl")               = weapon_zs_stone              : "A simple stone found laying pretty much anywhere." []
@PointClass base(Weapon) studio("models/weapons/w_snip_scout.mdl")              = weapon_zs_stubber            : "Ammo Type: Rifle.\nA lightweight sniper-rifle." []
@PointClass base(Weapon) studio("models/weapons/w_stunbaton.mdl")               = weapon_zs_stunbaton          : "Although weak but has the ability to slow zombies with an electric shock." []
@PointClass base(Weapon) studio("models/weapons/w_shot_m3super90.mdl")          = weapon_zs_sweepershotgun     : "Ammo Type: Shotgun.\nA basic shotgun." []
@PointClass base(Weapon) studio("models/weapons/w_knife_ct.mdl")                = weapon_zs_swissarmyknife     : "The classic melee weapon." []
@PointClass base(Weapon) studio("models/weapons/w_shotgun.mdl")                 = weapon_zs_tithonus           : "Ammo Type: Pulse.\nCharges a up shotgun blast of pulse projectiles." []
@PointClass base(Weapon) studio("models/weapons/w_pist_fiveseven.mdl")          = weapon_zs_tempest            : "Ammo Type: Pistol.\nA burst firing pistol." []
@PointClass base(Weapon) studio("models/weapons/w_smg1.mdl")                    = weapon_zs_tosser             : "Ammo Type: SMG.\nA basic SMG." []
@PointClass base(Weapon) studio("models/props_c17/tv_monitor01.mdl")            = weapon_zs_tv                 : "Deployable TV.\nAllows remote observation of other areas without owning a camera viewer." []
@PointClass base(Weapon) studio("models/weapons/w_smg_mac10.mdl")               = weapon_zs_uzi                : "Ammo Type: SMG.\nA higher powered, but still basic SMG." []
@PointClass base(Weapon) studio("models/weapons/w_pist_usp.mdl")                = weapon_zs_waraxe             : "Craftable Weapon.\nRecipe: Battleaxe Handgun + Glock. " []
@PointClass base(Weapon) studio("models/props_c17/tools_wrench01a.mdl")        = weapon_zs_wrench             : "This tool can be used to repair deployables as long as they were not damaged recently." []
@PointClass base(Weapon) studio("models/props_c17/utilityconnecter006c.mdl")    = weapon_zs_zapper             : "Ammo Type: Pulse.\nZaps zombies in range." []
@PointClass base(Weapon) studio("models/props_c17/utilityconnecter006c.mdl")    = weapon_zs_zapper_arc         : "Ammo Type: Pulse.\nZaps zombies in range, and arcs between them." []
@PointClass base(Weapon) studio("models/weapons/w_crossbow.mdl")                = weapon_zs_zeus               : "Ammo Type: Bolts.\nAn electric crossbow capable of chaining to multiple zombies." []
@PointClass base(Weapon) studio("models/weapons/w_alyx_gun.mdl")                = weapon_zs_z9000              : "Ammo Type: Pulse.\nDoesn't do as much damage as the other guns but slows targets on hit" []

@PointClass base(Weapon) studio("models/props/cs_italy/bananna.mdl")               = weapon_zs_f_banana           : "Banana food item. Heals 10 HP by default." []
@PointClass base(Weapon) studio("models/props_junk/garbage_milkcarton002a.mdl")    = weapon_zs_f_milk             : "Milk drink item. Heals 13 HP by default." []
@PointClass base(Weapon) studio("models/props/cs_italy/orange.mdl")                = weapon_zs_f_orange           : "Banana food item. Heals 10 HP by default." []
@PointClass base(Weapon) studio("models/props_junk/popcan01a.mdl")                 = weapon_zs_f_soda             : "Soda food item. Heals 5 HP by default." []
@PointClass base(Weapon) studio("models/props_junk/garbage_takeoutcarton001a.mdl") = weapon_zs_f_takeout          : "Delicious Chinese Dim Sum takeout food item.\nHeals 17 HP by default." []
@PointClass base(Weapon) studio("models/props/cs_office/water_bottle.mdl")         = weapon_zs_f_water            : "Water drink item. Heals 5 HP by default." []
@PointClass base(Weapon) studio("models/props_junk/watermelon01_chunk02a.mdl")     = weapon_zs_f_watermelon       : "Watermelon food item. Heals 15 HP by default." []